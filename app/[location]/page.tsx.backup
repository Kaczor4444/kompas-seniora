// app/[location]/page.tsx
import { notFound } from 'next/navigation';
import SearchResultCard from '../../components/SearchResultCard'; // Zmie≈Ñ ≈õcie≈ºkƒô je≈õli stworzy≈Çe≈õ /components

// --- MOCK DATA (PRZYK≈ÅADOWE DANE Z TWOJEJ BAZY) ---
// W realnej aplikacji zastƒÖpisz to pobieraniem danych z API
const MOCK_RESULTS = [
    { id: 1, name: "DPS im. ≈öw. Rodziny", type: "DPS", address: "ul. D≈Çuga 5", phone: "123-456-789", profile: "dla os√≥b starszych", officialCost: 5843.00, isAvailable: true },
    { id: 2, name: "≈öDS S≈Çoneczko", type: "≈öDS", address: "ul. Kr√≥tka 12", phone: "987-654-321", profile: "dla os√≥b z zaburzeniami psychicznymi", officialCost: 0, isAvailable: true },
    { id: 3, name: "DPS Zacisze", type: "DPS", address: "ul. Cicha 22", phone: "111-222-333", profile: "dla przewlekle chorych", officialCost: 6100.00, isAvailable: false },
];

// --- MOCK KOMPONENTU KARTY (W realnej aplikacji zaimportujesz go!) ---
// Poniewa≈º nie masz folderu /components, wkleimy go ponownie dla cel√≥w testowych
interface ResultCardProps {
    name: string; type: 'DPS' | '≈öDS' | 'ZOL'; address: string; phone: string; profile: string; 
    officialCost: number; userContribution: number; isAvailable: boolean;
}

const getCardStyle = (type: ResultCardProps['type']) => {
    switch (type) {
        case 'DPS': return { icon: 'üè†', color: 'bg-accent-500 text-white' };
        case '≈öDS': return { icon: 'üë•', color: 'bg-primary-500 text-white' };
        default: return { icon: 'üè†', color: 'bg-neutral-500 text-white' };
    }
};

const SearchResultCard: React.FC<ResultCardProps> = ({
    name, type, address, phone, profile, officialCost, userContribution, isAvailable,
}) => {
    const { icon: TypeSymbol, color: typeColor } = getCardStyle(type);
    const difference = (officialCost - userContribution).toFixed(2);

    return (
        <div className="bg-white border border-neutral-200 rounded-xl shadow-lg hover:shadow-xl transition-shadow duration-300 overflow-hidden">
            <div className="p-5 border-b border-neutral-200">
                <div className="flex justify-between items-start">
                    <h3 className="text-2xl font-bold text-neutral-900 leading-snug">{name}</h3>
                    <span className={`inline-flex items-center px-3 py-1 text-xs font-medium rounded-full ${isAvailable ? 'bg-success-100 text-success-700' : 'bg-red-100 text-red-700'}`}>
                        <span className="mr-1">‚úÖ</span>
                        {isAvailable ? 'SƒÖ wolne miejsca' : 'Brak miejsc'}
                    </span>
                </div>
                <div className="flex items-center space-x-2 mt-2">
                    <span className={`w-5 h-5 flex items-center justify-center ${type === 'DPS' ? 'text-accent-500' : 'text-primary-500'} text-lg`}>{TypeSymbol}</span>
                    <span className={`text-sm font-semibold ${type === 'DPS' ? 'text-accent-500' : 'text-primary-500'}`}>{type} ‚Äì {profile}</span>
                </div>
            </div>
            
            <div className="p-5 bg-neutral-50 border-b border-neutral-200">
                <p className="text-sm font-semibold text-neutral-700 mb-2 flex items-center">
                    <span className="w-4 h-4 mr-1 text-neutral-500 text-lg">$</span> Transparentne Koszty (OFICJALNE)
                </p>
                <div className="flex justify-between items-center bg-white p-3 rounded-lg border border-accent-100 mb-2">
                    <span className="text-base text-neutral-600">Miesiƒôczny Koszt (Pe≈Çny):</span>
                    <span className="text-lg font-bold text-neutral-900">{officialCost.toFixed(2)} z≈Ç</span>
                </div>

                <div className="flex justify-between items-center p-3 rounded-lg border border-neutral-300 bg-white">
                    <span className="text-base text-neutral-600">Udzia≈Ç Mieszka≈Ñca ({userContribution > 0 ? 'Maksymalnie' : 'Obliczona'}):</span>
                    <span className="text-lg font-bold text-accent-500">{userContribution.toFixed(2)} z≈Ç</span>
                </div>
                <p className="text-xs text-neutral-500 mt-2">
                    *R√≥≈ºnicƒô ({difference} z≈Ç) pokrywa gmina lub rodzina. Kwota {userContribution > 0 ? 'z Twojego kalkulatora.' : 'do obliczenia.'}
                </p>
            </div>

            <div className="p-5 flex justify-between items-center">
                <div className="space-y-2 text-sm text-neutral-700">
                    <div className="flex items-center"><span className="w-4 h-4 mr-2 text-neutral-400">üìç</span><span>{address}</span></div>
                    <div className="flex items-center"><span className="w-4 h-4 mr-2 text-neutral-400">üìû</span><span>{phone}</span></div>
                </div>
                <a href={`/details/${name.toLowerCase().replace(/\s/g, '-')}`} className={`px-5 py-2 text-white font-semibold rounded-lg transition-colors duration-200 ${typeColor.split(' ')[0]}`}>
                    Zobacz szczeg√≥≈Çy
                </a>
            </div>
        </div>
    );
};
// --- KONIEC MOCK KOMPONENTU KARTY ---


// Definicja g≈Ç√≥wnej strony Next.js
export default function SearchResultsPage({ params, searchParams }: {
    params: { location: string };
    searchParams: { max_oplata?: string };
}) {
    // 1. POBIERANIE PARAMETR√ìW URL
    const locationName = params.location.replace(/-/g, ' '); // np. 'malopolska' -> 'malopolska'
    const userContributionRaw = searchParams.max_oplata;

    // 2. OBLICZANIE WYNIKU Z KALKULATORA
    // Je≈õli max_oplata istnieje w URL, u≈ºywamy jej. Je≈õli nie, ustawiamy 0.
    const userContribution = userContributionRaw ? parseFloat(userContributionRaw) : 0;
    
    // U≈ºywamy du≈ºej litery na poczƒÖtku dla nag≈Ç√≥wka
    const formattedLocation = locationName.charAt(0).toUpperCase() + locationName.slice(1);

    // W realnej aplikacji: if (error) return notFound();
    if (!formattedLocation) {
        return notFound();
    }

    // 3. WSTƒòPNE FILTROWANIE (Na razie u≈ºywamy ca≈Çego MOCK_RESULTS)
    const filteredResults = MOCK_RESULTS.filter(r => r.type === 'DPS' || r.type === '≈öDS'); // Zawsze pokazujemy DPS i ≈öDS
    
    return (
        <div className="min-h-screen bg-neutral-50 pt-16">
            
            {/* Nag≈Ç√≥wek i Podsumowanie */}
            <div className="max-w-6xl mx-auto px-6 mb-10">
                <h1 className="text-4xl font-extrabold text-neutral-900 mb-2">
                    Wyniki wyszukiwania dla: <span className="text-accent-500">{formattedLocation}</span>
                </h1>
                
                {userContribution > 0 ? (
                    <p className="text-xl text-neutral-700 font-semibold bg-success-100 p-4 rounded-lg border border-success-200">
                        Twoja maksymalna op≈Çata miesiƒôczna: <span className="text-success-700">{userContribution.toFixed(2)} z≈Ç</span>. Filtrujemy wyniki, aby to pokazaƒá!
                    </p>
                ) : (
                    <p className="text-lg text-neutral-600">
                        Znaleziono {filteredResults.length} plac√≥wek DPS i ≈öDS. Aby zobaczyƒá TwojƒÖ maksymalnƒÖ op≈Çatƒô, <a href="#" className="text-primary-500 font-semibold hover:underline">przejd≈∫ do Kalkulatora Koszt√≥w</a>.
                    </p>
                )}
            </div>

            {/* G≈Ç√≥wna Tre≈õƒá (Lista Wynik√≥w i Filtry) */}
            <div className="max-w-6xl mx-auto px-6 grid grid-cols-1 md:grid-cols-4 gap-8">
                
                {/* Kolumna 1: Filtry (Placeholder) */}
                <div className="md:col-span-1 space-y-6">
                    <div className="bg-white p-6 rounded-xl shadow-lg border border-neutral-200">
                        <h3 className="text-xl font-bold mb-4 text-neutral-900">Filtrowanie</h3>
                        <div className="space-y-3">
                            {/* Przyk≈Çad: Sortowanie */}
                            <label className="block text-sm font-medium text-neutral-700">Sortuj wg:</label>
                            <select className="w-full p-2 border border-neutral-300 rounded-lg">
                                <option>Najni≈ºszy koszt pe≈Çny</option>
                                <option>Najwy≈ºszy koszt pe≈Çny</option>
                                <option>Alfabetycznie (A-Z)</option>
                                <option>Dostƒôpno≈õƒá miejsc</option>
                            </select>
                            
                            {/* Przyk≈Çad: Typ Plac√≥wki */}
                            <label className="block text-sm font-medium text-neutral-700 pt-4">Typ plac√≥wki:</label>
                            <div className="space-y-1">
                                <label className="flex items-center"><input type="checkbox" className="mr-2" defaultChecked /> DPS (Dom Pomocy Spo≈Çecznej)</label>
                                <label className="flex items-center"><input type="checkbox" className="mr-2" defaultChecked /> ≈öDS (≈örodowiskowy Dom Samopomocy)</label>
                            </div>
                        </div>
                    </div>
                </div>

                {/* Kolumny 2-4: Lista Wynik√≥w */}
                <div className="md:col-span-3 space-y-6">
                    {filteredResults.map(result => (
                        <SearchResultCard 
                            key={result.id}
                            name={result.name}
                            type={result.type}
                            address={result.address}
                            phone={result.phone}
                            profile={result.profile}
                            officialCost={result.officialCost}
                            // KLUCZOWY ELEMENT: dynamiczne przekazanie lub 0
                            userContribution={userContribution} 
                            isAvailable={result.isAvailable}
                        />
                    ))}

                    {/* Je≈õli brak wynik√≥w */}
                    {filteredResults.length === 0 && (
                        <div className="bg-white p-8 text-center rounded-xl shadow-lg">
                            <p className="text-xl text-neutral-600">Brak wynik√≥w spe≈ÇniajƒÖcych Twoje kryteria.</p>
                        </div>
                    )}
                </div>

            </div>
            
            {/* Miejsce na stopkƒô (zwykle renderowane w Layout) */}
            <div className="h-20"></div>

        </div>
    );
}